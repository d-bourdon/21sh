{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"opt",
				"option"
			],
			[
				"c",
				"cmd"
			],
			[
				"ft",
				"ft_hash_eratho"
			],
			[
				"str",
				"ft_strcmp"
			],
			[
				"e",
				"exit"
			],
			[
				"t_",
				"t_cmd"
			],
			[
				"ft_line",
				"ft_line_count_cmd"
			],
			[
				"ft_str",
				"ft_strlen"
			],
			[
				"inc",
				"include"
			],
			[
				"ft_enc",
				"ft_env_stock"
			],
			[
				"ft_env",
				"ft_env_addend"
			],
			[
				"m",
				"malloc"
			],
			[
				"free",
				"ft_freetabtab"
			],
			[
				"ft_cd",
				"ft_cd_spe"
			],
			[
				"env",
				"environ"
			],
			[
				"s",
				"singletone"
			],
			[
				"ft_c",
				"ft_clear_path_free"
			],
			[
				"tpm",
				"tmp2"
			],
			[
				"t",
				"tmp"
			],
			[
				"b",
				"b_term"
			],
			[
				"ft_p",
				"ft_putchar_fd"
			],
			[
				"ft_print",
				"ft_print_lign"
			],
			[
				"mo",
				"ft_move_next"
			],
			[
				"ft_put",
				"ft_putstr"
			],
			[
				"l_",
				"l_win"
			],
			[
				"ar",
				"argv"
			],
			[
				"in",
				"include"
			],
			[
				"z",
				"z"
			],
			[
				"ft_",
				"ft_putstr"
			],
			[
				"dete",
				"detecte_cle2"
			],
			[
				"total",
				"total_y"
			],
			[
				"bo",
				"ft_bonjour"
			],
			[
				"tmp",
				"tmp2"
			],
			[
				"x",
				"x"
			],
			[
				"i",
				"int"
			],
			[
				"p",
				"printf\tprintf …"
			],
			[
				"po",
				"pos2"
			],
			[
				"pt",
				"printf\tprintf …"
			],
			[
				"pos",
				"pos1"
			],
			[
				"mlx",
				"mlx_pixel_put"
			],
			[
				"fts",
				"ft_strcmp"
			],
			[
				"ch",
				"chdir"
			],
			[
				"n",
				"npath"
			],
			[
				"ft_retou",
				"ft_retour_env2"
			],
			[
				"fr",
				"free"
			],
			[
				"ft_s",
				"ft_strjoinfree"
			],
			[
				"en",
				"environ"
			],
			[
				"exec",
				"exec_cmd"
			],
			[
				"strjoin",
				"ft_strjoin"
			],
			[
				"cherche",
				"ft_cherche_cmd"
			],
			[
				"do",
				"liste_dossier"
			],
			[
				"opendir",
				"opendirornot"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 2890,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   ft_env.h                                           :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: dbourdon <dbourdon@student.42.fr>          +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2017/01/03 17:31:01 by dbourdon          #+#    #+#             */\n/*   Updated: 2017/01/11 10:48:57 by dbourdon         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#ifndef FT_ENV_H\n# define FT_ENV_H\n\n# include \"libft.h\"\n\ntypedef struct\t\ts_env\n{\n\tchar\t\t\t*name;\n\tchar\t\t\t*value;\n\tstruct s_env\t*next;\n}\t\t\t\t\tt_env;\n\nt_env\t*ft_env_chr(t_env *list, char *str);\nvoid\tft_env_stock(t_env *env, char *find, char *value);\nvoid\tft_env_addend(t_env **liste, t_env *ajout);\n\n#endif\n",
			"file": "includes/ft_env.h",
			"file_size": 1195,
			"file_write_time": 131286017370000000,
			"settings":
			{
				"buffer_size": 1195,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   21sh.h                                             :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: dbourdon <dbourdon@student.42.fr>          +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2017/01/05 17:03:23 by dbourdon          #+#    #+#             */\n/*   Updated: 2017/01/25 13:54:06 by dbourdon         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#ifndef SH_H\n# define SH_H\n\n# include \"libft.h\"\n# include \"ft_env.h\"\n# include \"ft_cd.h\"\n# include <sys/types.h>\n# include <sys/stat.h>\n# include <stdio.h>\n# include <stdlib.h>\n# include <unistd.h>\n# include <sys/wait.h>\n# include <signal.h>\n# include <termios.h>\n# include <termcap.h>\n# include <curses.h>\n# include <unistd.h>\n# include <fcntl.h>\n\n# define L_HASH 3000\n\n\ntypedef struct\t\ts_hash\n{\n\tchar\t\t\t*cmd;\n\tchar\t\t\t*path;\n\tstruct s_hash\t*next;\n}\t\t\t\t\tt_hash;\n\ntypedef struct\t\ts_cmd\n{\n\tchar\t\t\t**av;\n\tint\t\t\t\t*ipipe;\n\tint\t\t\t\t*opipe;\n\tstruct s_cmd\t*next;\n}\t\t\t\t\tt_cmd;\n\ntypedef\tstruct\t\ts_info\n{\n\tchar\t\t\t*workdir;\n\tt_hash\t\t\t**hash;\n\tt_cmd\t\t\t*cmd;\n\tt_env\t\t\t*env;\n\tstruct termios\tterm;\n\tstruct termios\tb_term;\n\tint\t\t\t\tl_win;\n\tint\t\t\t\th_win;\n}\t\t\t\t\tt_info;\n\n\nint\t\t\t\t\tmy_outc(int c);\n/*\n** main.c :\n*/\nvoid\t\t\t\t*singleton(void *data);\n\n/*\n** ft_init.c :\n*/\nvoid\t\t\t\tft_freetabtab(char **tabl);\nt_env\t\t\t\t*ft_init_env(char **environ);\nt_info\t\t\t\t*ft_init_info(char **environ);\n\n/*\n** line/line.c\n*/\nint\t\t\t\t\tft_line_start(t_info *info);\nchar\t\t\t\t*ft_line_get(int fd);\n\n/*\n** line/parse.c\n*/\nvoid\t\t\t\tft_line_exploit(char *str, int start, int i, t_cmd **out);\nt_cmd\t\t\t\t*ft_line_parse(char *str);\n\n/*\n** ft_strsplitwq.c\n*/\nchar\t\t\t\t**ft_strsplitwq(char *str);\n\n/*\n** detect_cmd.c\n*/\nint\t\t\t\t\tft_detect_builtin(t_cmd *cmd, t_info *info);\n\n/*\n**\thash/\n*/\nt_hash\t\t\t\t**ft_hash_init(void);\nvoid\t\t\t\tft_hash_add(char *name, char *value, int hash, t_hash **table);\nt_cmd\t\t\t\t*ft_hash_check(t_info *info, t_cmd *cmd);\nint\t\t\t\t\tft_hash_calc(char *str);\nint\t\t\t\t\t*ft_hash_eratho(int size);\n\n/*\n** echo/\n*/\nint\t\t\t\t\tft_otod(int\toctal);\nvoid\t\t\t\tft_putends(char const *s);\nint\t\t\t\t\tft_echo(char **av);\n\n#endif\n",
			"file": "includes/21sh.h",
			"file_size": 2562,
			"file_write_time": 131298224460000000,
			"settings":
			{
				"buffer_size": 2562,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   parse.c                                            :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: dbourdon <dbourdon@student.42.fr>          +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2017/01/16 17:59:04 by dbourdon          #+#    #+#             */\n/*   Updated: 2017/01/20 18:46:14 by dbourdon         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"21sh.h\"\n\nt_cmd\t*ft_line_parse(char *str)\n{\n\tt_cmd\t*out;\n\tint\t\ti;\n\tint\t\tstart;\n\tint\t\tquote;\n\n\tstart = 0;\n\ti = 0;\n\tout = NULL;\n\twhile (str[i - ((i < 1)? 0 : 1)])\n\t{\n\t\tif (str[i] == '\\\"' || str[i] == '\\'')\n\t\t{\n\t\t\tquote = i++;\n\t\t\twhile (str[i] && str[i] != str[quote])\n\t\t\t\ti++;\n\t\t\tif (!str[i])\n\t\t\t\treturn (out);\n\t\t}\n\t\tif (str[i] == ';' || !str[i])\n\t\t{\n\t\t\tif (start != i)\n\t\t\t\tft_line_exploit(str, start, i, &out);\n\t\t\tstart = i + 1;\n\t\t}\n\t\ti++;\n\t}\n\treturn (out);\n}\n\nvoid\tft_line_exploit(char *str, int start, int i, t_cmd **out)\n{\n\tt_cmd\t*list;\n\tt_cmd\t*ok;\n\tchar\t*tmp;\n\tchar\t**tb;\n\n\tif ((tmp = (char*)ft_memalloc(sizeof(char) * (i - start) + 1)) == NULL)\n\t\treturn ;\n\ttmp = ft_strncpy(tmp, &str[start], i - start);\n\ttb = ft_strsplitwq(tmp);\n\tfree(tmp);\n\tif ((ok = (t_cmd*)ft_memalloc(sizeof(t_cmd))) == NULL)\n\t\treturn ;\n\tok->av = tb;\n\tok->ipipe = NULL;\n\tok->opipe = NULL;\n\tok->next = NULL;\n\tif (*out == NULL)\n\t\t*out = ok;\n\telse\n\n\t{\n\t\tlist = *out;\n\t\twhile (list && list->next)\n\t\t\tlist  = list->next;\n\t\tlist->next = ok;\n\t}\n}\n",
			"file": "src/line/parse.c",
			"file_size": 1917,
			"file_write_time": 131294079740000000,
			"settings":
			{
				"buffer_size": 1917,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   main.c                                             :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: dbourdon <dbourdon@student.42.fr>          +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2017/01/03 14:45:48 by dbourdon          #+#    #+#             */\n/*   Updated: 2017/01/21 15:00:16 by dbourdon         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"21sh.h\"\n\nstatic void\tft_affichage_help(void)\n{\n\tft_putstr(\"\\033[1;34m*************************************************\\n\"\n\t\"*           _____  __    _____ _                *\\n\"\n\t\"*          / __  \\\\/  |  /  ___| |               *\\n\"\n\t\"*          `\\' / /\\'`| |  \\\\ `--.| |__             *\\n\"\n\t\"*            / /   | |   `--. \\\\ \\'_ \\\\            *\\n\"\n\t\"*          ./ /____| |_ /\\\\__/ / | | |           *\\n\"\n\t\"*          \\\\_____/\\\\___/ \\\\____/|_| |_|           *\\n\"\n\t\"*                                               *\\n\"\n\t\"*************************************************\\033[00m\\n\\n\"\n\t\"\\033[01m-------------- Commandes spécifique -------------\\n\"\n\t\"-------------------------------------------------\\033[00m\\n\"\n\t\"v. 3.0 -                            2016 dbourdon\\n\");\n}\n\nstatic void\tsighandler(int a)\n{a = 0;\nexit(0);}\n\nvoid\t*singleton(void *data)\n{\n\tstatic void *singleton_data;\n\n\tif (data)\n\t\tsingleton_data = data;\n\treturn (singleton_data);\n}\n\nint\t\tmain(void)\n{\n\tchar\t\t*str;\n\tint\t\t\ti;\n\textern char\t**environ;\n\tt_info\t\t*info;\n\t//void\t\t*hash; \n//\tt_cmd\t\t*tmp;\n\n\ti = 0;\n\tsignal(SIGINT, sighandler);\n\tprintf(\"before ft_init_info\\n\");\n\tinfo = ft_init_info(environ);\n\tprintf(\"before singleton\\n\");\n\tsingleton(info);\n\tft_affichage_help();\n\tprintf(\"Before ft_line_start\\n\");\n\tif (ft_line_start(info) == -1)\n\t\treturn (1);\n//\tprintf(\"OK before ft_line_get\\n\");\n\t//test = ft_line_get(0);\n\t//printf(\"\\n%s\\n\", test);\n\t//exit(10);\n\twhile (42)\n\t{\n\t\tft_putstr(\"\\n\\033[1;34m\");\n\t\tft_putstr(info->workdir);\n\t\tft_putstr(\"\\n\\033[1;32m$\\033[33m--> \\033[00m\");\n\t\tstr = ft_line_get(0);\n\t\tinfo->cmd = ft_line_parse(str);\n\t\tif (info->cmd == NULL)\n\t\t\tprintf(\"NULLLLLLLLLLLLLLLLL\\n\");\n\t\tprintf(\"cmd before builtin: %s\\n\", info->cmd->av[0]);\n\t\tft_detect_builtin(info->cmd, info);\n\t\t// while (info->cmd)\n\t\t// {\n\t\t// \tfr_free_tabtab(info->cmd->av);\n\t\t// \ttmp = info->cmd->next;\n\t\t// \tfree (info->cmd);\n\t\t// \tinfo->cmd = tmp;\n\t\t// }\n\t}\n\treturn (1);\n} \n",
			"file": "src/main.c",
			"file_size": 2824,
			"file_write_time": 131294808160000000,
			"settings":
			{
				"buffer_size": 2823,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   ft_echo.c                                          :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: dbourdon <dbourdon@student.42.fr>          +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2017/01/21 16:50:45 by dbourdon          #+#    #+#             */\n/*   Updated: 2017/01/25 14:28:17 by dbourdon         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"21sh.h\"\n\nstatic int\thexa_echo(char *str, int i)\n{\n\tchar\tnbr[3];\n\tint\t\tnb;\n\tchar\tc;\n\n\tnb = 0;\n\tif (!str[i] || !str[i + 1] || !str[i + 2])\n\t\treturn (0);\n\tif (ft_isdigit(str[i]) && ft_isdigit(str[i + 1]) && ft_isdigit(str[i + 2]))\n\t{\n\t\tnbr[0] = str[i];\n\t\tnbr[1] = str[i + 1];\n\t\tnbr[2] = str[i + 2];\n\t\tnb = ft_atoi(nbr);\n\t\tnb = ft_otod(nb);\n\t\tc = (char)nb;\n\t\twrite(1, &c, 1);\n\t\treturn (-1);\n\t}\n\treturn (0);\n}\n\nstatic int\tprint_opt(char *str, int i)\n{\n\ti++;\n\tif (str[i] == 'a')\n\t\twrite(1, \"\\a\", 1);\n\telse if (str[i] == 'b')\n\t\twrite(1, \"\\b\", 1);\n\telse if (str[i] == 'c')\n\t\treturn (-1);\n\telse if (str[i] == 'f')\n\t\twrite(1, \"\\f\", 1);\n\telse if (str[i] == 'n')\n\t\twrite(1, \"\\n\", 1);\n\telse if (str[i] == 'r')\n\t\twrite(1, \"\\r\", 1);\n\telse if (str[i] == 't')\n\t\twrite(1, \"\\t\", 1);\n\telse if (str[i] == 'v')\n\t\twrite(1, \"\\v\", 1);\n\telse if (str[i] == '\\\\')\n\t\twrite(1, \"\\\\\", 1);\n\telse if ((i = hexa_echo(str, i)) == 0)\n\t\treturn (0);\n\treturn ((i == -1) ? 4 : 2);\n}\n\nstatic int\taffiche_opt(char *str)\n{\n\tint\t\ti;\n\tint\t\tj;\n\n\ti = 0;\n\tj = 0;\n\twhile (str[i])\n\t{\n\t\tif (str[i] == '\\\\')\n\t\t{\n\t\t\tif ((j = print_opt(str, i)) != 0)\n\t\t\t{\n\t\t\t\tif (j == -1)\n\t\t\t\t\treturn (-1);\n\t\t\t\ti = i + j;\n\t\t\t}\n\t\t\telse\n\t\t\t\twrite(1, &str[i], 1);\n\t\t}\n\t\ti++;\n\t}\n\treturn (0);\n}\n\nint\t\t\tft_echo(char **av)\n{\n\tint\t\toption;\n\tint\t\ti;\n\n\toption = 0;\n\tif (!av[0] || !av[1])\n\t{\n\t\twrite(1, \"\\n\", 1);\n\t\treturn (1);\n\t}\n\tif (av[1][0] == '-')\n\t{\n\t\tif (ft_strequ(av[1], \"-n\"))\n\t\t\toption = 1;\n\t\telse if (ft_strequ(av[1], \"-e\"))\n\t\t\toption = 2;\n\t\telse if (ft_strequ(av[1], \"-en\") || ft_strequ(av[1], \"-ne\"))\n\t\t\toption = 3;\n\t}\n\ti = (option != 0) ? 2 : 1;\n\twhile (av[i])\n\t\tif (affiche_opt(av[i++]) == -1)\n\t\t\treturn (1);\n\tif (option != 1 || option != 3)\n\t\tft_putchar('\\n');\n\treturn (1);\n}\n",
			"file": "src/echo/ft_echo.c",
			"file_size": 2611,
			"file_write_time": 131298244970000000,
			"settings":
			{
				"buffer_size": 2611,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   detect_cmd.c                                       :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: dbourdon <dbourdon@student.42.fr>          +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2017/01/19 13:00:50 by dbourdon          #+#    #+#             */\n/*   Updated: 2017/01/25 13:54:13 by dbourdon         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"21sh.h\"\n\nint\t\tft_detect_builtin(t_cmd *cmd, t_info *info)\n{\n\tt_cmd\t*tmp;\n\n\ttmp = cmd;\n\twhile (tmp)\n\t{\n\t\ttmp = ft_hash_check(info, tmp);\n\t\tft_hash_add(\"cd\", \"/bin/lol\", ft_hash_calc(tmp->av[0]), info->hash);\n\t\ttmp = ft_hash_check(info, tmp);\n\t\t//printf(\"hash = %d\\n\", ft_hash_calc(tmp->av[0]));\n\t\tif (ft_strequ(tmp->av[0], \"exit\"))\n\t\t{\n\t\t\tprintf(\"\\nexit !!!\\n\");\n\t\t\ttputs(tgetstr(\"ei\", NULL), 1, my_outc);\n\t\t\ttcsetattr(0, TCSADRAIN, &(info->b_term));\n\t\t\texit(0);\n\t\t}\n\t\telse if (ft_strequ(tmp->av[0], \"cd\"))\n\t\t{\n\t\t\tprintf(\"cd %s - |%s|\\n\", tmp->av[0], tmp->av[1]);\n\t\t\tft_cd(tmp->av, info->env);\n\t\t}\n\t\telse if (ft_strequ(tmp->av[0], \"echo\"))\n\t\t{\n\t\t\tprintf(\"echo !\\n\");\n\t\t\tft_echo(tmp->av);\n\t\t}\n\t\ttmp = tmp->next;\n\t}\n\treturn (1);\n}",
			"file": "src/detect_cmd.c",
			"file_size": 1629,
			"file_write_time": 131298224530000000,
			"settings":
			{
				"buffer_size": 1629,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   ft_echo2.c                                         :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: dbourdon <dbourdon@student.42.fr>          +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2017/01/25 13:19:30 by dbourdon          #+#    #+#             */\n/*   Updated: 2017/01/25 14:06:34 by dbourdon         ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#include \"21sh.h\"\n\nint\t\tft_otod(int octal)\n{\n\tint decimal;\n\tint i;\n\n\ti = 0;\n\tdecimal = 0;\n\twhile (octal != 0)\n\t{\n\t\tdecimal = decimal + (octal % 10) * ft_pow(8, i++);\n\t\toctal = octal / 10;\n\t}\n\treturn (decimal);\n}\n\nvoid\tft_putends(char const *s)\n{\n\tchar\t*str;\n\n\tif (!s)\n\t\treturn ;\n\tstr = (char *)s;\n\tft_putstr(str);\n\tft_putchar(' ');\n}\n",
			"file": "src/echo/ft_echo2.c",
			"file_size": 1226,
			"file_write_time": 131298231940000000,
			"settings":
			{
				"buffer_size": 1226,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "ft_echo2.c"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 367.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Satisfy Dependencies"
			],
			[
				"pack",
				"Package Control: Upgrade Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"i",
			"help",
			"ls",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/dbourdon/21sh",
		"/Users/dbourdon/21sh/libft",
		"/Users/dbourdon/21sh/libft/srcs"
	],
	"file_history":
	[
		"/Users/dbourdon/21sh/outls",
		"/Users/dbourdon/21sh/src/ft_init.c",
		"/Users/dbourdon/21sh/src/cd/ft_clear_path.c",
		"/Users/dbourdon/21sh/src/line/line.c",
		"/Users/dbourdon/21sh/src/cd/ft_cd.c",
		"/Users/dbourdon/21sh/includes/21sh.h",
		"/Users/dbourdon/21sh/src/hash/ft_hash_init.c",
		"/Users/dbourdon/21sh/src/hash/ft_hash.c",
		"/Users/dbourdon/21sh/src/hash/ft_hash_exec.c",
		"/Users/dbourdon/21sh/src/ft_strsplitwq.c",
		"/Users/dbourdon/21sh/src/env/ft_env.c",
		"/Users/dbourdon/21sh/libft/ft_free_tabtab.c",
		"/Users/dbourdon/21sh/libft/ft_strncpy.c",
		"/Users/dbourdon/21sh/libft/Makefile",
		"/Users/dbourdon/21sh/out.txt",
		"/Users/dbourdon/21sh/libft/libft.h",
		"/Users/dbourdon/21sh/libft/get_next_line.c",
		"/Users/dbourdon/21sh/includes/ft_cd.h",
		"/Users/dbourdon/node/test.js",
		"/Users/dbourdon/21sh/test.js",
		"/Users/dbourdon/21sh/includes/line.h",
		"/Users/dbourdon/21sh/includes/ft_env.h",
		"/Users/dbourdon/21sh/src/cd/ft_cd2.c",
		"/Users/dbourdon/fillit/test.fillit",
		"/Users/dbourdon/21sh/out",
		"/Users/dbourdon/21sh/src/main.c",
		"/Users/dbourdon/21sh/libft/ft_memset.c",
		"/Users/dbourdon/ft_select/Makefile",
		"/Users/dbourdon/21sh/src/cd/ft_lstchr.c",
		"/Users/dbourdon/21sh/.gitignore",
		"/Users/dbourdon/21sh/cd.c",
		"/Users/dbourdon/21sh/main.c",
		"/Users/dbourdon/make-makefile.sh",
		"/Users/dbourdon/c-select/src/affichage.c",
		"/Users/dbourdon/select/lol",
		"/Users/dbourdon/select/src/stock.c",
		"/Users/dbourdon/select/src/erreur.c",
		"/Users/dbourdon/select/src/init_term.c",
		"/Users/dbourdon/select/src/parssing.c",
		"/Users/dbourdon/select/src/ft_select.h",
		"/Users/dbourdon/select/src/main.c",
		"/Users/dbourdon/select/libft/ft_putstr_fd.c",
		"/Users/dbourdon/select/config.sh",
		"/Users/dbourdon/select/src/txt.txt",
		"/Users/dbourdon/select/src/test.c",
		"/Users/dbourdon/select/src/ft_lstaddend.c",
		"/Users/dbourdon/select/libft/ft_isnbr.c",
		"/Users/dbourdon/select/libft/ft_pow.c",
		"/Users/dbourdon/select/libft/ft_revers.c",
		"/Users/dbourdon/select/src/signal.c",
		"/Users/dbourdon/select/libft/ft_putstr.c",
		"/Users/dbourdon/select/main.c",
		"/Users/dbourdon/fdf/fdf.sublime-project",
		"/Users/dbourdon/fdf/free_tabtab.c",
		"/Users/dbourdon/fdf/libft/ft_isnbr.c",
		"/Users/dbourdon/fdf/libft/ft_pow.c",
		"/Users/dbourdon/fdf/libft/ft_revers.c",
		"/Users/dbourdon/fdf/ft_erreur.c",
		"/Users/dbourdon/fdf/parssing.c",
		"/Users/dbourdon/fdf/libft/ft_atoi.c",
		"/Users/dbourdon/fdf/matrice.c",
		"/Users/dbourdon/fdf/zoom.c",
		"/Users/dbourdon/fdf/ligne.c",
		"/Users/dbourdon/fdf/init.c",
		"/Users/dbourdon/fdf/main.c",
		"/Users/dbourdon/fdf/ft_lstaddend.c",
		"/Users/dbourdon/fdf/fdf.h",
		"/Users/dbourdon/fdf/color.c",
		"/Users/dbourdon/fdf/maps/pentenegpos.fdf",
		"/Users/dbourdon/fdf/maps/pylone.fdf",
		"/Users/dbourdon/fdf/42.fdf",
		"/Users/dbourdon/fdf/rotation.c",
		"/Users/dbourdon/fdf/soft4-4",
		"/Users/dbourdon/fdf/norme",
		"/Users/dbourdon/Downloads/fdf/maps/mars.fdf",
		"/Users/dbourdon/fdf/soft.fdf",
		"/Users/dbourdon/fdf/out-42",
		"/Users/dbourdon/fdf/out2-42",
		"/Users/dbourdon/fdf/ligne.cdot",
		"/Users/dbourdon/fdf/main.cdot",
		"/Users/dbourdon/fdf/libft/get_next_line.c",
		"/nfs/2015/d/dbourdon/fdf/test.c",
		"/nfs/2015/d/dbourdon/Downloads/test_maps/42.fdf",
		"/private/var/folders/zz/zyxvpxvq6csfxvn_n0001s18000f8_/T/fz3temp-1/Parser.php",
		"/private/var/folders/zz/zyxvpxvq6csfxvn_n0001s18000f8_/T/fz3temp-1/composer.json",
		"/private/var/folders/zz/zyxvpxvq6csfxvn_n0001s18000f8_/T/fz3temp-1/config.php",
		"/private/var/folders/zz/zyxvpxvq6csfxvn_n0001s18000f8_/T/fz3temp-1/index 2.php",
		"/private/var/folders/zz/zyxvpxvq6csfxvn_n0001s18000f8_/T/fz3temp-1/index.php",
		"/private/var/folders/zz/zyxvpxvq6csfxvn_n0001s18000f8_/T/fz3temp-1/null.php",
		"/nfs/2015/d/dbourdon/minishell/libft/Makefile",
		"/nfs/2015/d/dbourdon/minishell/.gitignore",
		"/nfs/2015/d/dbourdon/minishell/cd.c",
		"/nfs/2015/d/dbourdon/minishell/libft/libft.h",
		"/nfs/2015/d/dbourdon/minishell/env3.c",
		"/nfs/2015/d/dbourdon/minishell/ft_exit.c",
		"/nfs/2015/d/dbourdon/minishell/env2.c",
		"/nfs/2015/d/dbourdon/minishell/ft_erreur.c",
		"/nfs/2015/d/dbourdon/minishell/libft/ft_isspace.c",
		"/nfs/2015/d/dbourdon/minishell/libft/ft_strsubfree.c",
		"/nfs/2015/d/dbourdon/minishell/libft/ft_strsplitwhite.c",
		"/nfs/2015/d/dbourdon/minishell/main.c",
		"/nfs/2015/d/dbourdon/minishell/libft/ft_strcat.c",
		"/nfs/2015/d/dbourdon/minishell/test.c",
		"/nfs/2015/d/dbourdon/minishell/env.c",
		"/nfs/2015/d/dbourdon/minishell/libft/testsplitwhite.c",
		"/nfs/2015/d/dbourdon/minishell/libft/ft_strjoin.c",
		"/nfs/2015/d/dbourdon/minishell/libft/get_next_line.c",
		"/nfs/2015/d/dbourdon/minishell/libft/ft_strstr.c",
		"/nfs/2015/d/dbourdon/minishell/libft/ft_strsplit.c",
		"/nfs/2015/d/dbourdon/minishell/libft/ft_strjoinfree.c",
		"/nfs/2015/d/dbourdon/minishell/ft_strjoinfree.c",
		"/Volumes/Storage/cache/library.dbourdon/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/nfs/2015/d/dbourdon/ft_ls/ft_ajout_liste.c",
		"/nfs/2015/d/dbourdon/minishell/ft_lstaddend.c",
		"/nfs/2015/d/dbourdon/ft_ls/ft_lstaddend.c",
		"/nfs/2015/d/dbourdon/ft_ls/libft/ft_strsplit.c",
		"/nfs/2015/d/dbourdon/minishell/Makefile2",
		"/nfs/2015/d/dbourdon/ft_ls/libft/._get_next_line.c",
		"/nfs/2015/d/dbourdon/ft_ls/libft/libft.h",
		"/nfs/2015/d/dbourdon/Gnl/get_next_line.h",
		"/nfs/2015/d/dbourdon/Gnl/get_next_line.c",
		"/nfs/2015/d/dbourdon/ft_ls/libft/Makefile",
		"/nfs/2015/d/dbourdon/ft_ls/libft/get_next_line.c",
		"/nfs/2015/d/dbourdon/ft_ls/ft_lecture_liste.c",
		"/nfs/2015/d/dbourdon/ft_ls/special2.c",
		"/nfs/2015/d/dbourdon/ft_ls/ft_path.c",
		"/nfs/2015/d/dbourdon/ft_ls/special.c",
		"/nfs/2015/d/dbourdon/ft_ls/ft_ls.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"*"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"//\t\t",
			"\\n",
			"while",
			"[\\\\'`/]",
			"\\",
			"getcwd",
			"ft_cd_spe",
			"path",
			"\\",
			"tinfo",
			"point",
			"info->",
			"400",
			"501",
			"500",
			"100",
			"1000",
			"500",
			"200",
			"600",
			"500",
			"p[0] + 100",
			"282678",
			"343715",
			"407297",
			"\\",
			"TMP2",
			"tmp",
			"0",
			"phpbb/",
			"non",
			"env",
			"[( ]env[-,;)]",
			"[( ]env",
			"ft_retour_env",
			"\tenvd = &envtab;",
			"printf",
			"{\n",
			"ddddenv",
			"  ",
			"lst_f"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2890,
						"regions":
						{
						},
						"selection":
						[
							[
								1128,
								1128
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "includes/ft_env.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1195,
						"regions":
						{
						},
						"selection":
						[
							[
								1187,
								1187
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "includes/21sh.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2562,
						"regions":
						{
						},
						"selection":
						[
							[
								1354,
								1339
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/line/parse.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1917,
						"regions":
						{
						},
						"selection":
						[
							[
								1917,
								1917
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "src/main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2823,
						"regions":
						{
						},
						"selection":
						[
							[
								1930,
								1930
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/echo/ft_echo.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2611,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								2611
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 301.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/detect_cmd.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1629,
						"regions":
						{
						},
						"selection":
						[
							[
								1592,
								1592
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/echo/ft_echo2.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1226,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1226
							]
						],
						"settings":
						{
							"auto_name": "ft_echo2.c",
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "21sh.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"check_existe"
			]
		],
		"width": 392.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 182.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
